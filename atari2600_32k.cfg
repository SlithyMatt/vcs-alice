# Atari VCS 2600 linker configuration file for cc65
#
# Florent Flament (contact@florentflament.com), 2017

SYMBOLS {
    __STACKSIZE__: type = weak, value = $0010;   # 16 Bytes system stack
}

MEMORY {
    RAM:  file = "", start = $0080, size = $0080 - __STACKSIZE__, define = yes;
    ROM0: file = %O, start = $1000, size = $1000, fill = yes, fillval = $FF;
    ROM1: file = %O, start = $3000, size = $1000, fill = yes, fillval = $FF;
    ROM2: file = %O, start = $5000, size = $1000, fill = yes, fillval = $FF;
    ROM3: file = %O, start = $7000, size = $1000, fill = yes, fillval = $FF;
    ROM4: file = %O, start = $9000, size = $1000, fill = yes, fillval = $FF;
    ROM5: file = %O, start = $B000, size = $1000, fill = yes, fillval = $FF;
    ROM6: file = %O, start = $D000, size = $1000, fill = yes, fillval = $FF;
    ROM7: file = %O, start = $F000, size = $1000, fill = yes, fillval = $FF;
}

SEGMENTS {
    ZEROPAGE: load = RAM,             type = zp;
    STARTUP:  load = ROM0,            type = ro;
    CODE:     load = ROM0,            type = ro;
    RODATA:   load = ROM0,            type = ro,  optional = yes;
    DATA:     load = ROM0, run = RAM, type = rw,  optional = yes, define = yes;
    BSS:      load = RAM,             type = bss, optional = yes;
    VECTORS:  load = ROM0,            type = ro,  start = $1FFA;
    BANK1:    load = ROM1,            type = ro;
    BANK2:    load = ROM2,            type = ro;
    BANK3:    load = ROM3,            type = ro;
    BANK4:    load = ROM4,            type = ro;
    BANK5:    load = ROM5,            type = ro;
    BANK6:    load = ROM6,            type = ro;
    BANK7:    load = ROM7,            type = ro;
    VECTORS1: load = ROM1,            type = ro,  start = $3FFA;
    VECTORS2: load = ROM2,            type = ro,  start = $5FFA;
    VECTORS3: load = ROM3,            type = ro,  start = $7FFA;
    VECTORS4: load = ROM4,            type = ro,  start = $9FFA;
    VECTORS5: load = ROM5,            type = ro,  start = $BFFA;
    VECTORS6: load = ROM6,            type = ro,  start = $DFFA;
    VECTORS7: load = ROM7,            type = ro,  start = $FFFA;
}
